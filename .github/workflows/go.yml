name: Go

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  go:
    name: Build and test
    strategy:
      matrix:
        os:
          - ubuntu
          - macos
          # TODO: https://github.com/b4nst/turbogit/issues/48
          # - windows
        include:
          # - os: windows
          #   shell: msys2 {0}
          - os: ubuntu
            shell: bash
          - os: macos
            shell: bash
    runs-on: ${{ matrix.os }}-latest
    defaults:
      run:
        shell: ${{ matrix.shell }}
    steps:
      - name: Install windows dependencies
        uses: msys2/setup-msys2@v2
        if: matrix.os == 'windows'
        with:
          update: true
          msystem: CLANG64
          install: >-
            pkg-config
            make
          path-type: inherit

      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.17
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Build
        run: make build

      - name: Download codeclimate reporter
        if: matrix.os == 'ubuntu'
        run: wget -O cc-reporter https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 && chmod +x cc-reporter

      - name: Prepare code coverage
        if: matrix.os == 'ubuntu'
        run: ./cc-reporter before-build

      - name: Test
        run: make test

      - name: Upload code coverage
        if: matrix.os == 'ubuntu'
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
        run: ./cc-reporter after-build --coverage-input-type gocov -p github.com/b4nst/turbogit

  doc:
    name: Deploy documentation
    runs-on: ubuntu-latest
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.17
        id: go
      - name: Install doctave
        run: |
          mkdir -p $GITHUB_WORKSPACE/bin
          curl -sSL https://github.com/Doctave/doctave/releases/download/0.4.2/doctave-0.4.2-x86_64-unknown-linux-musl.tar.gz | tar xvz
          mv doctave-0.4.2-x86_64-unknown-linux-musl/doctave $GITHUB_WORKSPACE/bin/doctave
          chmod +x $GITHUB_WORKSPACE/bin/doctave
          echo "$GITHUB_WORKSPACE/bin" >> $GITHUB_PATH
      - uses: supplypike/setup-bin@v1
        name: Install doctave
        with:
          uri: https://github.com/Doctave/doctave/releases/download/0.4.2/doctave-0.4.2-x86_64-unknown-linux-musl.tar.gz
          name: doctave
          version: 0.4.2
      - name: Build
        run: make doc
      - name: Deploy (dry-run)
        if: success()
        uses: crazy-max/ghaction-github-pages@v3
        with:
          target_branch: gh-pages
          build_dir: dist/doc/site
          dry_run: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
